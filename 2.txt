#if !defined(__ALIGNER__)
#define __ALIGNER__

#include "alignbase.h"
#include "WRImage.hpp"
#include "AlgoConfig.h"
#include "ClassFactory.h"
#include "log.hpp"
#include <string>

//no memory handling
//init and uninit not necessary
class Aligner
{
public:
    Aligner() { mX = 0.0f; mY = 0.0f; mScore = 0.0f;};
    ~Aligner() {};

public:
    void configure();
    void doAlign(WRMat& ref0, WRMat& test);
    void getResult(float& x, float& y, float& s) { x=mX; y=mY; s= mScore;};

private:
    AlignBase* mAligner;
    float mX, mY, mScore;
    std::string mTemplate, mFilterMethod;
    int mSerchRange, mFilterSize;
};

#endif //!defined(__ALIGNER__)
